[
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "aPools",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "token1",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "token2",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "val1",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "val2",
				"type": "uint256"
			}
		],
		"name": "addLiquidity",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getPools",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "token1",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token2",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "totalToken1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalToken2",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "symbol1",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol2",
						"type": "string"
					}
				],
				"internalType": "struct LiquidityPool.userPools[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "a",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "b",
				"type": "address"
			}
		],
		"name": "getPriceOf",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "token1",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token2",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "totalToken1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalToken2",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "symbol1",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol2",
						"type": "string"
					}
				],
				"internalType": "struct LiquidityPool.userPools",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "poolInd",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "token1",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "token2",
				"type": "address"
			}
		],
		"name": "removeLiquidity",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "token1",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "token2",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "val",
				"type": "uint256"
			}
		],
		"name": "swapTokens",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "userPoolBalances",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]